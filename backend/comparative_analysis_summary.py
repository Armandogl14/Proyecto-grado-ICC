#!/usr/bin/env python
"""
Resumen comparativo final de ambos contratos analizados
Muestra las diferencias entre las expectativas del usuario y las predicciones del ML
"""

def print_comparative_summary():
    """
    Imprime un resumen comparativo detallado de ambos contratos
    """
    print("üéØ AN√ÅLISIS COMPARATIVO FINAL - CONTRATOS DE ALQUILER")
    print("=" * 65)
    
    # Datos de ambos contratos
    contract_data = {
        'problematic': {
            'user_label': 'PROBLEM√ÅTICO',
            'location': 'Ensanche Naco',
            'rent': 'RD$38,000',
            'total_clauses': 13,
            'abusive_clauses': 9,
            'risk_score': 0.625,
            'processing_time': 22.46,
            'risk_level': 'üü° MEDIO',
            'user_expectation': 'Problem√°tico',
            'ml_result': 'Detect√≥ problemas parcialmente'
        },
        'normal': {
            'user_label': 'NORMAL',
            'location': 'Residencial Villa Diana',
            'rent': 'RD$16,000',
            'total_clauses': 14,
            'abusive_clauses': 11,
            'risk_score': 0.638,
            'processing_time': 25.79,
            'risk_level': 'üî¥ ALTO',
            'user_expectation': 'Normal (no problem√°tico)',
            'ml_result': 'Detect√≥ M√ÅS problemas de los esperados'
        }
    }
    
    print("üìä DATOS COMPARATIVOS:")
    print("-" * 25)
    
    print(f"{'CRITERIO':<25} {'CONTRATO 1':<20} {'CONTRATO 2':<20}")
    print("-" * 65)
    print(f"{'Evaluaci√≥n Usuario':<25} {contract_data['problematic']['user_label']:<20} {contract_data['normal']['user_label']:<20}")
    print(f"{'Ubicaci√≥n':<25} {contract_data['problematic']['location']:<20} {contract_data['normal']['location']:<20}")
    print(f"{'Renta Mensual':<25} {contract_data['problematic']['rent']:<20} {contract_data['normal']['rent']:<20}")
    print(f"{'Total Cl√°usulas':<25} {contract_data['problematic']['total_clauses']:<20} {contract_data['normal']['total_clauses']:<20}")
    print(f"{'Cl√°usulas Abusivas':<25} {contract_data['problematic']['abusive_clauses']:<20} {contract_data['normal']['abusive_clauses']:<20}")
    print(f"{'Risk Score ML':<25} {contract_data['problematic']['risk_score']:<20.3f} {contract_data['normal']['risk_score']:<20.3f}")
    print(f"{'Nivel de Riesgo':<25} {contract_data['problematic']['risk_level']:<20} {contract_data['normal']['risk_level']:<20}")
    print(f"{'Tiempo Proceso (s)':<25} {contract_data['problematic']['processing_time']:<20.2f} {contract_data['normal']['processing_time']:<20.2f}")
    
    # An√°lisis de discrepancias
    print("\nüîç AN√ÅLISIS DE DISCREPANCIAS:")
    print("-" * 35)
    
    print("CONTRATO 1 (Etiquetado como 'PROBLEM√ÅTICO'):")
    print("  ‚úÖ Coincidencia parcial:")
    print("    ‚Ä¢ El ML detect√≥ nivel medio de problemas (0.625)")
    print("    ‚Ä¢ 9/13 cl√°usulas identificadas como abusivas")
    print("    ‚Ä¢ El an√°lisis coincide con la percepci√≥n del usuario")
    
    print("\nCONTRATO 2 (Etiquetado como 'NORMAL'):")
    print("  ‚ùå Discrepancia significativa:")
    print("    ‚Ä¢ El ML detect√≥ MAYOR riesgo (0.638 vs 0.625)")
    print("    ‚Ä¢ 11/14 cl√°usulas identificadas como abusivas")
    print("    ‚Ä¢ El ML encontr√≥ M√ÅS problemas de los esperados")
    
    # Cl√°usulas espec√≠ficas problem√°ticas en el contrato "normal"
    print("\n‚ö†Ô∏è CL√ÅUSULAS PROBLEM√ÅTICAS EN CONTRATO 'NORMAL':")
    print("-" * 50)
    
    problematic_clauses_normal = [
        "TERCERO: Responsabilidad excesiva por cat√°strofes y reparaciones",
        "CUARTO: Responsabilidad por da√±os de visitantes/empleados",
        "NOVENO: Fiador solidario con responsabilidad amplia",
        "D√âCIMO SEGUNDO: Resoluci√≥n autom√°tica por cualquier incumplimiento"
    ]
    
    for i, clause in enumerate(problematic_clauses_normal, 1):
        print(f"  {i}. {clause}")
    
    # Comparaci√≥n de cl√°usulas similares
    print("\nüîÑ CL√ÅUSULAS SIMILARES EN AMBOS CONTRATOS:")
    print("-" * 45)
    
    similar_clauses = [
        {
            'type': 'Aumento de renta',
            'contract1': '10% o inflaci√≥n (lo mayor)',
            'contract2': '10% o inflaci√≥n (lo mayor)',
            'ml_eval1': 'V√°lida',
            'ml_eval2': 'V√°lida',
            'comment': 'ML fue consistente'
        },
        {
            'type': 'Penalidad rescisi√≥n',
            'contract1': '1 mes de renta',
            'contract2': '1 mes de renta',
            'ml_eval1': 'Abusiva',
            'ml_eval2': 'V√°lida',
            'comment': 'ML inconsistente'
        },
        {
            'type': 'Fiador solidario',
            'contract1': 'Presente',
            'contract2': 'Presente',
            'ml_eval1': 'V√°lida',
            'ml_eval2': 'Abusiva',
            'comment': 'ML inconsistente'
        }
    ]
    
    for clause in similar_clauses:
        print(f"\nüìã {clause['type']}:")
        print(f"  Contrato 1: {clause['contract1']} ‚Üí {clause['ml_eval1']}")
        print(f"  Contrato 2: {clause['contract2']} ‚Üí {clause['ml_eval2']}")
        print(f"  Observaci√≥n: {clause['comment']}")
    
    # Posibles explicaciones
    print("\nü§î POSIBLES EXPLICACIONES:")
    print("-" * 30)
    
    explanations = [
        "1. El modelo ML fue entrenado con datos espec√≠ficos que pueden no representar completamente la realidad legal dominicana",
        "2. Las diferencias en redacci√≥n y estructura pueden afectar las predicciones del modelo",
        "3. El contrato 'normal' puede tener elementos legalmente problem√°ticos que el usuario no percibi√≥ inicialmente",
        "4. La percepci√≥n de 'normalidad' puede estar influida por pr√°cticas comunes pero no necesariamente legales",
        "5. El modelo puede necesitar m√°s datos de entrenamiento espec√≠ficos del contexto dominicano"
    ]
    
    for explanation in explanations:
        print(f"  {explanation}")
    
    # Recomendaciones para mejorar el sistema
    print("\nüí° RECOMENDACIONES PARA MEJORAR EL SISTEMA:")
    print("-" * 50)
    
    recommendations = [
        "1. Recopilar m√°s datos de contratos dominicanos con etiquetas verificadas por abogados",
        "2. Incluir m√°s art√≠culos del C√≥digo Civil en la base RAG",
        "3. Calibrar el modelo con casos espec√≠ficos de la jurisprudencia dominicana",
        "4. Desarrollar m√©tricas de confianza basadas en el consenso RAG + ML",
        "5. Implementar validaci√≥n cruzada con expertos legales locales"
    ]
    
    for recommendation in recommendations:
        print(f"  {recommendation}")
    
    # Valor del sistema RAG
    print("\n‚úÖ VALOR AGREGADO DEL SISTEMA RAG:")
    print("-" * 40)
    
    rag_benefits = [
        "‚Ä¢ Proporciona contexto legal espec√≠fico del C√≥digo Civil Dominicano",
        "‚Ä¢ Referencia art√≠culos relevantes para fundamentar decisiones",
        "‚Ä¢ Permite b√∫squeda sem√°ntica de normativa legal",
        "‚Ä¢ Facilita la explicabilidad de las decisiones del sistema",
        "‚Ä¢ Reduce la dependencia de conocimiento impl√≠cito del modelo"
    ]
    
    for benefit in rag_benefits:
        print(f"  {benefit}")
    
    # Conclusiones finales
    print("\nüéØ CONCLUSIONES FINALES:")
    print("-" * 25)
    
    print("‚úÖ √âXITOS:")
    print("  ‚Ä¢ El sistema RAG + ML funciona t√©cnicamente")
    print("  ‚Ä¢ Proporciona referencias legales espec√≠ficas")
    print("  ‚Ä¢ Detecta patrones problem√°ticos en contratos")
    print("  ‚Ä¢ Procesa contratos complejos en tiempo razonable")
    
    print("\n‚ö†Ô∏è AREAS DE MEJORA:")
    print("  ‚Ä¢ Calibraci√≥n del modelo con m√°s datos locales")
    print("  ‚Ä¢ Consistencia en evaluaci√≥n de cl√°usulas similares")
    print("  ‚Ä¢ Validaci√≥n con expertos legales dominicanos")
    print("  ‚Ä¢ Incorporaci√≥n de m√°s contexto legal en RAG")
    
    print("\nüöÄ IMPACTO:")
    print("  ‚Ä¢ El sistema puede ayudar a identificar cl√°usulas problem√°ticas")
    print("  ‚Ä¢ Proporciona una segunda opini√≥n basada en IA")
    print("  ‚Ä¢ Facilita el acceso a an√°lisis legal preliminar")
    print("  ‚Ä¢ Mejora la transparencia del proceso de evaluaci√≥n")
    
    print(f"\n{'='*65}")
    print("üéâ AN√ÅLISIS COMPARATIVO COMPLETADO")
    print(f"{'='*65}")


if __name__ == "__main__":
    print_comparative_summary()