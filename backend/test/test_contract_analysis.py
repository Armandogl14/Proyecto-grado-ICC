#!/usr/bin/env python
"""
Script de prueba para verificar el an√°lisis de contratos
"""
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from ml_analysis.ml_service import ml_service

def test_contract_analysis():
    """Prueba b√°sica del an√°lisis de contratos"""
    print("üîÑ Iniciando prueba de an√°lisis de contratos...")
    
    # Texto de prueba
    test_contract = """
    PRIMERO: La Propietaria alquila a El Inquilino un local comercial en la Av. Abraham Lincoln No. 15, Santo Domingo. 
    El local ser√° usado para actividades comerciales, pero la propietaria se reserva el derecho de cambiar su uso sin previo aviso.
    
    SEGUNDO: El Inquilino acepta hacerse responsable de cualquier multa impuesta por el incumplimiento de regulaciones 
    que sean ajenas a su operaci√≥n, lo que es un abuso contractual.
    
    TERCERO: El contrato se prorroga autom√°ticamente cada a√±o con un aumento de 25% en el alquiler, sin opci√≥n de renegociaci√≥n.
    """
    
    try:
        print("üìù Analizando contrato de prueba...")
        result = ml_service.analyze_contract(test_contract)
        
        print(f"‚úÖ An√°lisis completado exitosamente!")
        print(f"üìä Resultados:")
        print(f"  ‚Ä¢ Total de cl√°usulas: {result['total_clauses']}")
        print(f"  ‚Ä¢ Cl√°usulas abusivas: {result['abusive_clauses_count']}")
        print(f"  ‚Ä¢ Nivel de riesgo: {result['risk_score']:.2%}")
        print(f"  ‚Ä¢ Tiempo de procesamiento: {result['processing_time']:.2f}s")
        
        print(f"\nüìã Resumen ejecutivo:")
        print(result['executive_summary'])
        
        print(f"\nüí° Recomendaciones:")
        print(result['recommendations'])
        
        print(f"\nüîç An√°lisis detallado de cl√°usulas:")
        for i, clause in enumerate(result['clause_results'], 1):
            ml_abusive = clause['ml_analysis']['is_abusive']
            ml_prob = clause['ml_analysis']['abuse_probability']
            gpt_abusive = clause['gpt_analysis'].get('is_abusive', 'N/A')
            gpt_valid = clause['gpt_analysis'].get('is_valid_clause', 'N/A')
            
            print(f"  Cl√°usula {i}:")
            print(f"    ML: {'Abusiva' if ml_abusive else 'Normal'} ({ml_prob:.2%})")
            print(f"    GPT: {'Abusiva' if gpt_abusive else 'Normal'} | V√°lida: {gpt_valid}")
            print(f"    Texto: {clause['text'][:100]}...")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error en el an√°lisis: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_contract_analysis()
    sys.exit(0 if success else 1) 